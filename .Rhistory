mtcars
?mtcars
?mtcars
dim(Data_Cars)
dim(Data_Cars)
Data_Cars <- mtcars
dim(Data_Cars)
Data_Cars <- mtcars
dim(Data_Cars)
names(Data_Cars)
rownames(Data_Cars)
#name of each row in first column (car names)
Data_Cars$cyl
sort(Data_Cars$cyl)
"Hello World"
'Hello World'
list x(1:10)
list(x 1:10)
load("C:/Users/ameli/OneDrive - SIM - Singapore Institute of Management/ST2195 Programming for DS/RStudio/.RData")
list (x 1:10)
list x (1:10)
list (1:10)
x <- 17
if (x>10)
print("x is larger than 10")
if (x>20)
print("x is larger than 20")
else
if (x>10)
print("x is larger than 10")
if (x>20)
print("x is larger than 20")
else print("x is smaller than 20")
x <- 41
if (x > 10) {
print("Above ten")
if (x > 20) {
print("and also above 20!")
} else {
print("but not above 20.")
}
} else {
print("below 10.")
}
if (x > 10)
print("Above ten")
if (x > 20)
print("and also above 20!")
else
x <- 41
if (x > 10) {
print("Above ten")
if (x > 20) {
print("and also above 20!")
} else {
print("but not above 20.")
}
} else {
print("below 10.")
}
print(x)
for (x in 1:10)
print(x)
source("C:/Users/ameli/OneDrive - SIM - Singapore Institute of Management/ST2195 Programming for DS/RStudio/RStudio Practice Assignment 1.R")
for (x in 1:10)
print(x)
print(x)
install.packages("magrittr")
library(magrittr)
```
wiki_html <- read_html("https://en.wikipedia.org/wiki/Comma-separated_values")
library(xml2)
library(magrittr)
library(rvest) #import the 'rvest' package
wiki_html <- read_html("https://en.wikipedia.org/wiki/Comma-separated_values")
csv_texts <-
wiki_html %>%
html_nodes(xpath = '//h2[contains(., "Example")]/following-sibling::pre') %>%
html_text()
csv_texts <-
wiki_html %>%
html_nodes(xpath = '//h2[contains(., "wikitable")]/following-sibling::pre') %>%
html_text()
setwd("C:/Users/ameli/OneDrive - SIM - Singapore Institute of Management/ST2195 Programming for DS/Workshop/gitAME/st2195_assignment_2")
getwd()
csv_texts <-
wiki_html %>%
html_nodes(xpath = '//h2[contains(., "wikitable")]/following-sibling::pre') %>%
html_text()
html_nodes(xpath = '//h2[contains(., "wikitable")]/following-sibling::pre') %>%
html_nodes(xpath = '//h2[contains(., "wikitable")]/following-sibling::pre') %>%
csv_table <- csv_texts[1]
csv_texts <-
wiki_html %>%
html_nodes(xpath = '//h2[contains(., "wikitable")]/following-siblings::pre') %>%
html_text()
csv_texts <-
wiki_html %>%
html_nodes(xpath = '//h2[contains(., "wikitable")]/following-sibling::pre') %>%
html_text()
library(rvest)
csv_wiki <- read_html("https://en.wikipedia.org/wiki/Comma-separated_values")
csv_tables <- csv_wiki %>% html_nodes(xpath = '//h2[contains(., "Example")]//following-sibling::pre') %>% html_text()
csv_tables
csv_list <-
csv_tables <-
csv_wiki %>%
html_nodes(xpath = "//table[contains(@class, 'wikitable')]//following-sibling::pre")
%>%
csv_list <-
csv_tables <-
csv_wiki %>%
html_nodes(xpath = "//table[contains(@class, 'wikitable')]//following-sibling::pre")
csv_list
View(csv_list)
csv_text <- csv_list[1]
write.table(csv_text, file = "car.csv", quote = FALSE, col.names = FALSE, row.names = FALSE)
read.csv("car.csv")
csv_list <-
csv_tables <-
csv_wiki %>%
html_nodes(xpath = "//table[contains(@class, 'wikitable')]//following-sibling::pre")
%>%
csv_list <-
csv_tables <-
csv_wiki %>%
html_nodes(xpath = "//table[contains(@class, 'wikitable')]//following-sibling::pre") %>% html_text()
csv_list
csv_text <- csv_list[1]
write.table(csv_text, file = "car.csv", quote = FALSE, col.names = FALSE, row.names = FALSE)
read.csv("car.csv")
